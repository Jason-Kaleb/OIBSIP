package onlinereservationsystem;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

public class reservationScreen extends javax.swing.JFrame {

    public reservationScreen()
    {
        initComponents();
        Connect();
    }
    
    Connection connect;
    PreparedStatement insertSt;
    String databaseUrl = "jdbc:mysql://localhost/trainreservation";
    
    public void Connect()
    {
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connect = DriverManager.getConnection(databaseUrl, "root", "");
        }
        catch (ClassNotFoundException ex)
        {
            Logger.getLogger(reservationScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        catch (SQLException ex)
        {
            Logger.getLogger(reservationScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        lName = new javax.swing.JTextField();
        trainNumber = new javax.swing.JTextField();
        from = new javax.swing.JTextField();
        classType = new javax.swing.JTextField();
        startDate = new com.toedter.calendar.JCalendar();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        endDate = new com.toedter.calendar.JCalendar();
        toLocation = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        trainName = new javax.swing.JTextField();
        bookBtn = new javax.swing.JButton();
        logoutBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        checktrainNoBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Train Reservation System");

        jLabel1.setFont(new java.awt.Font("SimSun", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Train Reservation System");

        jLabel2.setText("First name");

        jLabel3.setText("Last name");

        jLabel4.setText("Train number");

        jLabel5.setText("From");

        jLabel6.setText("Class");

        jLabel7.setText("Starting Date");

        trainNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainNumberActionPerformed(evt);
            }
        });

        jLabel8.setText("To");

        jLabel9.setText("Ending Date");

        jLabel10.setText("Train name");

        trainName.setEditable(false);
        trainName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trainNumber)
                    .addComponent(from)
                    .addComponent(classType)
                    .addComponent(startDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(97, 97, 97)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(toLocation)
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trainName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel3))
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(trainNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(trainName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(toLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(classType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startDate, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(endDate, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        bookBtn.setText("Book");
        bookBtn.setFocusable(false);
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });

        logoutBtn.setText("Logout");
        logoutBtn.setFocusable(false);
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel Booking");
        cancelBtn.setFocusable(false);
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        checktrainNoBtn.setText("Check Train Number");
        checktrainNoBtn.setFocusable(false);
        checktrainNoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checktrainNoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(checktrainNoBtn)
                .addGap(9, 9, 9)
                .addComponent(bookBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookBtn)
                    .addComponent(logoutBtn)
                    .addComponent(cancelBtn)
                    .addComponent(checktrainNoBtn))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // my functions 
    
    private static String formatDate(Date date)
    {
         SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        return sdf.format(date);
    }
    
    public static int generatePNR()
    {
        Random random = new Random();
        return random.nextInt((9999 - 1000) + 1) + 1000;
    }
    
    // this function updates the name of the train when the train number is entered
    
    public void updateName()
    {
        String trainNo = trainNumber.getText().trim();
        
        if (trainNo.isEmpty())
        {
            System.err.println("Error: Input must be a number.");
            return; // Exit method
        }
        
        int[] trainNumbers = {1, 2, 3, 4, 5, 6, 7, 8, 9};
        String[] trainNames = {"Shinkansen", "Acela Express", "Eurostar", "Thalys", "Sapsan", "ICE", "Shinkansen Bullet Train", "Haruka", "Sunrise Express"};

        int trainNoConverted = 0;
        
        try
        {
            trainNoConverted = Integer.parseInt(trainNo);
        }
        catch (NumberFormatException e)
        {
            System.err.println("Error: Input is not a valid integer.");
            trainName.setText(""); // Clear train name if invalid input
            return; // Exit method
        }
        
        for (int i = 0; i < trainNumbers.length; i++)
        {
            if (trainNumbers[i] == trainNoConverted)
            {
                trainName.setText(trainNames[i]);
            }  
        }
    }
    
    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        
        int pnr = generatePNR();
        
        String firstName = fName.getText();
        String lastName = lName.getText();
        String trainNo = trainNumber.getText();
        
        int trainNoConverted = 0;
        
        try
        {
            trainNoConverted = Integer.parseInt(trainNo);
        }
        catch (NumberFormatException e)
        {
            System.err.println("Error: Input is not a valid integer.");
            JOptionPane.showMessageDialog(this, "Enter a valid integer in the Train number textfield!");
        }
        
        String train_Name = trainName.getText();
        String fromLocation = from.getText();
        String destination = toLocation.getText();
        String classChoice = classType.getText();
        Date start_Date = startDate.getDate();
        String formattedStartDate = formatDate(start_Date);
        Date end_Date = endDate.getDate();
        String formattedEndDate = formatDate(end_Date);
        
        if (!(firstName.equals("") || lastName.equals("") || trainNo.equals("") || fromLocation.equals("") || destination.equals("") || classChoice.equals("") || formattedStartDate.equals("") || formattedEndDate.equals("")))
        {
            try
            {
                insertSt = connect.prepareStatement("INSERT into reservationsystem(pnr, first_name, last_name, train_number, train_name, from_location, to_location, class_type, start_date, end_date) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                
                insertSt.setInt(1, pnr);
                insertSt.setString(2, firstName);
                insertSt.setString(3, lastName);
                insertSt.setInt(4, trainNoConverted);
                insertSt.setString(5, train_Name);
                insertSt.setString(6, fromLocation);
                insertSt.setString(7, destination);
                insertSt.setString(8, classChoice);
                insertSt.setString(9, formattedStartDate);
                insertSt.setString(10, formattedEndDate);
                
                int returnedCode = insertSt.executeUpdate();
                
                if (returnedCode == 1)
                {
                    JOptionPane.showMessageDialog(this, "Successfully Booked! Your PNR: " + pnr);
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "There was an error booking!");
                }
                
                fName.setText("");
                lName.setText("");
                trainNumber.setText("");
                trainName.setText("");
                from.setText("");
                toLocation.setText("");
                classType.setText("");
                fName.requestFocus();

            }
            catch (SQLException ex)
            {
                Logger.getLogger(reservationScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please make sure that all fields are filled in");
        }
    }//GEN-LAST:event_bookBtnActionPerformed

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
        dispose();
        
        loginSection backToLogin = new loginSection();
        backToLogin.setVisible(true);
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void trainNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainNameActionPerformed

    private void trainNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trainNumberActionPerformed

    private void checktrainNoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checktrainNoBtnActionPerformed
        
        String trainNo = trainNumber.getText();
        
        int trainNoConverted = 0;
        
        try
        {
            trainNoConverted = Integer.parseInt(trainNo);
        }
        catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Enter a valid integer!");
        }
        
        if (!(trainNoConverted < 0 || trainNoConverted > 10))
        {
            // Below is the code for adding name to textfield when train number is entered
            trainNumber.getDocument().addDocumentListener(new DocumentListener()
            {
                @Override
                public void insertUpdate(DocumentEvent e)
                {
                    updateName();
                }

                @Override
                public void removeUpdate(DocumentEvent e)
                {
                    updateName();
                }

                @Override
                public void changedUpdate(DocumentEvent e) 
                {
                    updateName();
                }
            });
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Enter valid train number ranging from 1 - 9");
        }
    }//GEN-LAST:event_checktrainNoBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
       
        dispose();
        
        showBooking viewBooking = new showBooking();
        viewBooking.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reservationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reservationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reservationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reservationScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new reservationScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton checktrainNoBtn;
    private javax.swing.JTextField classType;
    private com.toedter.calendar.JCalendar endDate;
    private javax.swing.JTextField fName;
    private javax.swing.JTextField from;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lName;
    private javax.swing.JButton logoutBtn;
    private com.toedter.calendar.JCalendar startDate;
    private javax.swing.JTextField toLocation;
    private javax.swing.JTextField trainName;
    private javax.swing.JTextField trainNumber;
    // End of variables declaration//GEN-END:variables
}
